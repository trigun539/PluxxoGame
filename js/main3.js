// Generated by CoffeeScript 1.3.3
(function() {
  var Pluxxor, adjacent, aim, angle, animate, canvas, canvasHeight, canvasWidth, context, downKey, drawPluxxor, drawSprite, fired, height, init, keyDown, keyUp, leftKey, mouseOffCanvas, mouseOnCanvas, mouseX, mouseY, opposite, pluxxor, pluxxorCounter, pluxxorImg1, pluxxorXImgPos, pluxxorYImgPos, rightKey, upKey, width;

  window.requestAnimFrame = (function() {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback, element) {
      return window.setTimeout(callback, 1000 / 60);
    };
  })();

  Pluxxor = (function() {

    function Pluxxor(name, xPos, yPos, width, height, img, xImgPos, yImgPos) {
      this.name = name;
      this.xPos = xPos;
      this.yPos = yPos;
      this.width = width;
      this.height = height;
      this.img = img;
      this.xImgPos = xImgPos;
      this.yImgPos = yImgPos;
    }

    return Pluxxor;

  })();

  canvas = void 0;

  canvasWidth = 500;

  canvasHeight = 400;

  context = void 0;

  rightKey = false;

  leftKey = false;

  upKey = false;

  downKey = false;

  width = 500;

  height = 400;

  fired = false;

  angle = void 0;

  adjacent = 0;

  opposite = 0;

  mouseX = void 0;

  mouseY = void 0;

  pluxxorImg1 = new Image();

  pluxxorXImgPos = 0;

  pluxxorYImgPos = 0;

  pluxxorCounter = 0;

  init = function() {
    canvas = document.getElementById("canvas");
    context = canvas.getContext("2d");
    document.addEventListener("keydown", keyDown, false);
    document.addEventListener("keyup", keyUp, false);
    canvas.addEventListener("mouseover", mouseOnCanvas, false);
    canvas.addEventListener("mouseout", mouseOffCanvas, false);
    pluxxorImg1.src = "img/pluxxoSprite.png";
    pluxxorImg1.onload = animate;
  };

  animate = function() {
    requestAnimFrame(animate);
    drawPluxxor();
  };

  keyDown = function(e) {
    if (e.keyCode === 87) {
      return upKey = true;
    } else if (e.keyCode === 83) {
      return downKey = true;
    } else if (e.keyCode === 68) {
      return rightKey = true;
    } else {
      if (e.keyCode === 65) {
        return leftKey = true;
      }
    }
  };

  keyUp = function(e) {
    if (e.keyCode === 87) {
      return upKey = false;
    } else if (e.keyCode === 83) {
      return downKey = false;
    } else if (e.keyCode === 68) {
      return rightKey = false;
    } else {
      if (e.keyCode === 65) {
        return leftKey = false;
      }
    }
  };

  mouseOnCanvas = function(e) {
    canvas.addEventListener("mousemove", aim, false);
  };

  mouseOffCanvas = function(e) {
    canvas.removeEventListener("mousemove", aim, false);
    mouseX = void 0;
    mouseY = void 0;
    angle = void 0;
  };

  aim = function(e) {
    mouseX = e.x - this.offsetLeft;
    mouseY = e.y - this.offsetTop;
  };

  pluxxor = new Pluxxor("David", 100, 100, 25, 30, pluxxorImg1, 50, 50);

  drawPluxxor = function() {
    if (mouseX && mouseY) {
      if (mouseX > pluxxor.xPos && mouseY < pluxxor.yPos) {
        adjacent = pluxxor.yPos - mouseY;
        opposite = mouseX - pluxxor.xPos;
        angle = Math.atan(opposite / adjacent) + ((3 * Math.PI) / 2);
      } else if (mouseX < pluxxor.xPos && mouseY < pluxxor.yPos) {
        adjacent = pluxxor.xPos - mouseX;
        opposite = pluxxor.yPos - mouseY;
        angle = Math.atan(opposite / adjacent) + Math.PI;
      } else if (mouseX < pluxxor.xPos && mouseY > pluxxor.yPos) {
        adjacent = mouseY - pluxxor.yPos;
        opposite = pluxxor.xPos - mouseX;
        angle = Math.atan(opposite / adjacent) + (Math.PI / 2);
      } else if (mouseX > pluxxor.xPos && mouseY > pluxxor.yPos) {
        adjacent = mouseX - pluxxor.xPos;
        opposite = mouseY - pluxxor.yPos;
        angle = Math.atan(opposite / adjacent);
      } else if (mouseX === pluxxor.xPos && pluxxor.yPos > mouseY) {
        angle = (3 * Math.PI) / 2;
      } else if (mouseX === pluxxor.xPos && pluxxor.yPos < mouseY) {
        angle = Math.PI / 2;
      } else if (mouseX < pluxxor.xPos && pluxxor.yPos === mouseY) {
        angle = Math.PI;
      } else if (mouseX > pluxxor.xPos && pluxxor.yPos === mouseY) {
        angle = 0;
      }
    }
    if (rightKey) {
      pluxxor.xPos += 5;
    } else {
      if (leftKey) {
        pluxxor.xPos -= 5;
      }
    }
    if (upKey) {
      pluxxor.yPos -= 5;
    } else {
      if (downKey) {
        pluxxor.yPos += 5;
      }
    }
    if (pluxxor.xPos <= 0) {
      pluxxor.xPos = 0;
    }
    if ((pluxxor.xPos + pluxxor.width) >= width) {
      pluxxor.xPos = width - pluxxor.width;
    }
    if (pluxxor.yPos <= 0) {
      pluxxor.yPos = 0;
    }
    if ((pluxxor.yPos + pluxxor.height) >= height) {
      pluxxor.yPos = height - pluxxor.height;
    }
    if (pluxxorCounter >= 0 && pluxxorCounter < 10) {
      drawSprite(pluxxor.img, pluxxor.width * 0, 0, pluxxor.width, pluxxor.height, pluxxor.xPos, pluxxor.yPos, angle);
    } else if (pluxxorCounter >= 10 && pluxxorCounter < 20) {
      drawSprite(pluxxor.img, pluxxor.width * 1, 0, pluxxor.width, pluxxor.height, pluxxor.xPos, pluxxor.yPos, angle);
    } else if (pluxxorCounter >= 20 && pluxxorCounter < 30) {
      drawSprite(pluxxor.img, pluxxor.width * 2, 0, pluxxor.width, pluxxor.height, pluxxor.xPos, pluxxor.yPos, angle);
    } else if (pluxxorCounter >= 30 && pluxxorCounter < 40) {
      drawSprite(pluxxor.img, pluxxor.width * 3, 0, pluxxor.width, pluxxor.height, pluxxor.xPos, pluxxor.yPos, angle);
    } else {

    }
    if (pluxxorCounter === 40) {
      pluxxorCounter = 0;
      drawSprite(pluxxor.img, pluxxor.width * 3, 0, pluxxor.width, pluxxor.height, pluxxor.xPos, pluxxor.yPos, angle);
    }
    pluxxorCounter++;
  };

  drawSprite = function(sprite, imgX, imgY, w, h, x, y, angle) {
    if (rightKey) {
      context.clearRect(x - 5, y, w, h);
    } else {
      if (leftKey) {
        context.clearRect(x + 5, y, w, h);
      }
    }
    if (upKey) {
      context.clearRect(x, y + 5, w, h);
    } else {
      if (downKey) {
        context.clearRect(x, y - 5, w, h);
      }
    }
    if (!rightKey || !leftKey || !upKey || !downKey) {
      context.clearRect(0, 0, w, h);
    }
    if (angle) {
      context.save();
      context.translate(x, y);
      context.rotate(angle);
      context.clearRect(-w / 2, -h / 2, w, h);
      context.drawImage(sprite, imgX, imgY, w, h, -w / 2, -h / 2, w, h);
      context.restore();
    } else {
      context.drawImage(sprite, imgX, imgY, w, h, x, y, w, h);
    }
    console.log(angle * (180 / Math.PI));
  };

  init();

}).call(this);
